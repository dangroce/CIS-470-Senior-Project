using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Default2 : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }
protected void Login1_Authenticate(object sender, AuthenticateEventArgs e)
{
    // grab the user credentials
    dsUser dsUserLogin;
    // grab the security level
    string SecurityLevel;
    // bounce the input data off of the database
    dsUserLogin = clsDataLayer.VerifyUser(Server.MapPath("DB path"),
    Login1.UserName, Login1.Password);
    // Add a catch for an error
    if (dsUserLogin.tblUserLogin.Count < 1)
    {
        e.Authenticated = false;
        // Input the emails that the messages for errors will be sent to
        if (clsBusinessLayer.SendEmail("Login Incorrect",
        "The login failed for UserName: " + Login1.UserName +
        " Password: " + Login1.Password))
        {
            Login1.FailureText = Login1.FailureText +
            " Your incorrect login information was sent to receiver@receiverdomain.com";
        }
        return;
    }
    // Authenticate the security level
    SecurityLevel = dsUserLogin.tblUserLogin[0].SecurityLevel.ToString();
    // Add a catch for the security level
    switch (SecurityLevel)
    {
        case "A":
            // Authenticate a security level A
            e.Authenticated = true;
            FormsAuthentication.RedirectFromLoginPage(Login1.UserName, false);
            Session["SecurityLevel"] = "A";
            break;
        case "U":
            // Authenticate a security level U
            e.Authenticated = true;
            FormsAuthentication.RedirectFromLoginPage(Login1.UserName, false);
            Session["SecurityLevel"] = "U";
            break;
        default:
            e.Authenticated = false;
            break;
    }
}
}
